# shellcheck shell=sh

: "${XARGS:="xargs"}"

# $1 - flavoured base triple
ksysroot_freebsd_meta() {
    local basetriple="${1%@*}"
    local flavour="${1#*@}"
    FREEBSD_VERSION="${flavour#freebsd}"

    case "${basetriple}" in
        aarch64*)
            FREEBSD_MACHINE=arm64
            _FREEBSD_MACHINE_CPUARCH=aarch64
            FREEBSD_MACHINE_ARCH=aarch64
            MESON_CPUFAMILY="aarch64"
            ;;
        armv7*)
            FREEBSD_MACHINE=arm
            _FREEBSD_MACHINE_CPUARCH=arm
            FREEBSD_MACHINE_ARCH=armv7
            MESON_CPUFAMILY="arm"
            ;;
        i386*|i686*)
            FREEBSD_MACHINE=i386
            _FREEBSD_MACHINE_CPUARCH=i386
            FREEBSD_MACHINE_ARCH=i386
            MESON_CPUFAMILY="x86"
            ;;
        powerpc-*)
            FREEBSD_MACHINE=powerpc
            _FREEBSD_MACHINE_CPUARCH=powerpc
            FREEBSD_MACHINE_ARCH=powerpc
            MESON_CPUFAMILY="ppc"
            ;;
        powerpcspe-*)
            FREEBSD_MACHINE=powerpc
            _FREEBSD_MACHINE_CPUARCH=powerpc
            FREEBSD_MACHINE_ARCH=powerpcspe
            MESON_CPUFAMILY="ppc"
            ;;
        powerpc64-*)
            FREEBSD_MACHINE=powerpc
            _FREEBSD_MACHINE_CPUARCH=powerpc
            FREEBSD_MACHINE_ARCH=powerpc64
            MESON_CPUFAMILY="ppc64"
            ;;
        powerpc64le-*)
            FREEBSD_MACHINE=powerpc
            _FREEBSD_MACHINE_CPUARCH=powerpc
            FREEBSD_MACHINE_ARCH=powerpc64le
            MESON_CPUFAMILY="ppc64"
            ;;
        riscv64-*)
            FREEBSD_MACHINE=riscv
            _FREEBSD_MACHINE_CPUARCH=riscv
            FREEBSD_MACHINE_ARCH=riscv64
            MESON_CPUFAMILY="riscv64"
            ;;
        amd64*|x86_64*)
            FREEBSD_MACHINE=amd64
            _FREEBSD_MACHINE_CPUARCH=amd64
            FREEBSD_MACHINE_ARCH=amd64
            MESON_CPUFAMILY="x86_64"
            ;;
        *)
            echo Unknown FREEBSD_MACHINE "${triple}"
            return 1
            ;;
    esac
    MESON_CPU=${MESON_CPUFAMILY}
    : "${MESON_ENDIAN:=little}"
    MESON_SYSTEM="freebsd"

    KSYSROOT_TRIPLE="${basetriple}"
    # x86_64-unknown-freebsd13.2
    KSYSROOT_FULL_TRIPLE="${basetriple}"
    KSYSROOT_LINKER="ld.lld"

    1>&2 echo FREEBSD_VERSION="${FREEBSD_VERSION}" FREEBSD_MACHINE="${FREEBSD_MACHINE}" FREEBSD_MACHINE_ARCH="${FREEBSD_MACHINE_ARCH}"
    1>&2 echo KSYSROOT_TRIPLE="${KSYSROOT_TRIPLE}" KSYSROOT_FULL_TRIPLE="${KSYSROOT_FULL_TRIPLE}" KSYSROOT_LINKER="${KSYSROOT_LINKER}"
    1>&2 echo MESON_SYSTEM="${MESON_SYSTEM}" MESON_CPUFAMILY="${MESON_CPUFAMILY}" MESON_CPU="${MESON_CPU}" MESON_ENDIAN="${MESON_ENDIAN}"
}

# $1 - flavoured base triple
# emits the URLs that are required to build the sysroot
ksysroot_freebsd_bom() {
    ksysroot_freebsd_meta "$1"

    local freebsd_base_url
    case "${FREEBSD_VERSION}" in
        *-RELEASE|*-RC?|*-BETA?)
            freebsd_base_url=${FREEBSD_MIRROR}/releases
            ;;
        *-STABLE|*-CURRENT)
            freebsd_base_url=${FREEBSD_MIRROR}/snapshots
            ;;       
        *)
            echo Unknown version "${version}"
            return 1
            ;;
    esac
    printf "%s %s %s %s\n" "base.txz" "${FREEBSD_VERSION}" \
     "${freebsd_base_url}/${FREEBSD_MACHINE}/${FREEBSD_MACHINE_ARCH}/${FREEBSD_VERSION}/base.txz" \
     "freebsd/${FREEBSD_MACHINE}_${FREEBSD_MACHINE_ARCH}_freebsd${FREEBSD_VERSION}-base.txz"
}

ksysroot_freebsd_frombom() {
    ksysroot_prefix "${2:-ksysroot-$1}"

    ksysroot_freebsd_meta "$1"
    mkdir -p "${KSYSROOT_SYSROOT}"
    local pkg version url file
    while read -r pkg version url file; do
        1>&2 echo PKG="${pkg}" URL="${url}" FILE="${file}"
        cache "${url}" "${file}"
        ${TAR} -C "${KSYSROOT_SYSROOT}" -xf "${CACHE_DIR}/${file}" ./lib ./usr/lib ./usr/include ./usr/libdata/pkgconfig
    done

    # Brew removes empty directories, keep them
    ${FIND} "${KSYSROOT_SYSROOT}" -type d -empty | ${XARGS} -I'{}' touch '{}'/.empty
    fix_abs_link "${KSYSROOT_SYSROOT}"

    ksysroot_emit /usr/lib /usr/local/libdata/pkgconfig /usr/libdata/pkgconfig

    # NB: HFS+ is case preserving, not case-sensitive, hence 
    # usr/include/linux/netfilter/xt_CONNMARK.h and usr/include/linux/netfilter/xt_connmark.h
    # will overwrite each other
    while read -r pkg version url file; do
        1>&2 echo "${pkg}" is from "${url}" in "$(ls "${CACHE_DIR}/${file}")"
        if [ "${pkg}" = linux-libc-dev ]; then
            local suffix="${version#*.*.}"
            linux_version="${version%."${suffix}"}"
        fi
        cache "${url}" "${file}"
        undeb "${KSYSROOT_SYSROOT}" "${CACHE_DIR}/${file}" \
            --exclude ./etc --exclude "./*bin" --exclude "./*/*bin" --exclude ./var \
            -s '%\./lib\(.*\)%./usr/lib\1%'
    done

    fixup
}

ksysroot_freebsd_install() {
    ksysroot_freebsd_bom "$1" | ksysroot_freebsd_frombom "$1" "$2"
}

ksysroot_freebsd_pkgbase() {
	# FreeBSD-clibs-dev FreeBSD-clibs FreeBSD-libcompiler_rt-dev
    echo FIXME: implement
    return 1
}
